// <auto-generated />
using System;
using BlueSquareBugTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlueSquareBugTracker.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220710094849_Seeding")]
    partial class Seeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UploaderId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UploaderId");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InChargeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TicketPriorityId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TicketTypeId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InChargeId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TicketPriorityId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TicketId");

                    b.HasIndex("UserId");

                    b.ToTable("TicketActivity");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("DocumentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TicketId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketDocument");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AuthorId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TicketId");

                    b.ToTable("TicketMessage");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketPriority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TicketPriority");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Basse",
                            Priority = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Moyenne",
                            Priority = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Haute",
                            Priority = 3
                        });
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TicketType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Problème technique",
                            Order = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Réclamation",
                            Order = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Demande de développement",
                            Order = 0
                        });
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserRoleId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvatarUrl = "",
                            Created = new DateTime(2022, 7, 10, 11, 48, 49, 179, DateTimeKind.Local).AddTicks(5350),
                            Mail = "client@xxx.yyy",
                            Password = "LPvaio5Lqv2pDPGbHc5tTbKSOfJxJ/8uDW2QvO29D1A=",
                            UserRoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            AvatarUrl = "",
                            Created = new DateTime(2022, 7, 10, 11, 48, 49, 192, DateTimeKind.Local).AddTicks(6654),
                            Mail = "operator@xxx.yyy",
                            Password = "LPvaio5Lqv2pDPGbHc5tTbKSOfJxJ/8uDW2QvO29D1A=",
                            UserRoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            AvatarUrl = "",
                            Created = new DateTime(2022, 7, 10, 11, 48, 49, 205, DateTimeKind.Local).AddTicks(7823),
                            Mail = "admin@xxx.yyy",
                            Password = "LPvaio5Lqv2pDPGbHc5tTbKSOfJxJ/8uDW2QvO29D1A=",
                            UserRoleId = 3
                        });
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Client"
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Opérateur"
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.Document", b =>
                {
                    b.HasOne("BlueSquareBugTracker.Data.Entities.User", "Uploader")
                        .WithMany("Documents")
                        .HasForeignKey("UploaderId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Uploader");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.Ticket", b =>
                {
                    b.HasOne("BlueSquareBugTracker.Data.Entities.User", "InCharge")
                        .WithMany("InChargeTickets")
                        .HasForeignKey("InChargeId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("BlueSquareBugTracker.Data.Entities.User", "Owner")
                        .WithMany("OwnedTickets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("BlueSquareBugTracker.Data.Entities.TicketPriority", "Priority")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketPriorityId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("BlueSquareBugTracker.Data.Entities.TicketType", "Type")
                        .WithMany("Tickets")
                        .HasForeignKey("TicketPriorityId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("InCharge");

                    b.Navigation("Owner");

                    b.Navigation("Priority");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketActivity", b =>
                {
                    b.HasOne("BlueSquareBugTracker.Data.Entities.Ticket", "Ticket")
                        .WithMany("Activities")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlueSquareBugTracker.Data.Entities.User", "User")
                        .WithMany("TicketActivities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Ticket");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketDocument", b =>
                {
                    b.HasOne("BlueSquareBugTracker.Data.Entities.Document", "Document")
                        .WithMany("TicketDocuments")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlueSquareBugTracker.Data.Entities.Ticket", "Ticket")
                        .WithMany("Documents")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketMessage", b =>
                {
                    b.HasOne("BlueSquareBugTracker.Data.Entities.User", "Author")
                        .WithMany("TicketMessages")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.HasOne("BlueSquareBugTracker.Data.Entities.Ticket", "Ticket")
                        .WithMany("Messages")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.User", b =>
                {
                    b.HasOne("BlueSquareBugTracker.Data.Entities.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.Document", b =>
                {
                    b.Navigation("TicketDocuments");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.Ticket", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Documents");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketPriority", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.TicketType", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.User", b =>
                {
                    b.Navigation("Documents");

                    b.Navigation("InChargeTickets");

                    b.Navigation("OwnedTickets");

                    b.Navigation("TicketActivities");

                    b.Navigation("TicketMessages");
                });

            modelBuilder.Entity("BlueSquareBugTracker.Data.Entities.UserRole", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
